import 'package:hlshop/all_file/all_file.dart';class ProductEvaluationGroup extends StatelessWidget {  const ProductEvaluationGroup({    super.key,    required this.orderProductEntity,    required this.formControlName,  });  final OrderProductEntity orderProductEntity;  final String formControlName;  @override  Widget build(BuildContext context) {    final cubit = context.read<RatingCubit>();    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        AbsorbPointer(          child: RatingProduct(            attributeValues: orderProductEntity.variant?.variantValueName ?? '',            product: orderProductEntity.productEntity ?? const ProductEntity(),          ),        ),        AppRatingBar(          initialRating: context              .read<RatingCubit>()              .ratingValue(orderProductEntity.orderItemID ?? ''),          onRatingUpdate: (value) {            cubit.updateRating(              orderItemID: orderProductEntity.orderItemID ?? '',              rating: value,            );          },        ).centered(),        BlocBuilder<RatingCubit, RatingState>(          builder: (context, state) {            return DisplayImagesAttachment(              uploadImage: () {                context.read<RatingCubit>().uploadImage(                      context: context,                      keyMap: orderProductEntity.orderItemID ?? '',                    );              },              deleteImage: (String? src) {                context.read<RatingCubit>().deleteImage(                      keyMap: orderProductEntity.orderItemID ?? '',                      src: src ?? '',                    );              },              medias: context                  .watch<RatingCubit>()                  .getMedias(orderProductEntity.orderItemID ?? ''),            );          },        ),        ProductCommentInputField(          formControlName: formControlName,        ).py16(),        // EvaluationActionButton(isUpdate: isUpdate).pb16(),      ].withDivider(Gaps.vGap16),    );  }}